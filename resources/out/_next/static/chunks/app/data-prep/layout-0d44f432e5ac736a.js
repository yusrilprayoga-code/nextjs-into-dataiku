(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[162],{789:(e,t,l)=>{Promise.resolve().then(l.bind(l,821))},821:(e,t,l)=>{"use strict";l.r(t),l.d(t,{default:()=>b});var a=l(5155),o=l(2115),s=l(4213),n=l(1154),c=l(1380),r=l(6474),i=l(3052);let d=(0,l(9946).A)("check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]]);var u=l(9890),p=l(2577),g=l(9509);function h(){let e="adera",t="benuang",{plotType:l,setPlotType:h,setSelectedFilePath:x,selectedFilePath:m,fetchPlotData:f,selectedWells:b,toggleWellSelection:y,setPlotFigure:j}=(0,p.M)(),[v,N]=(0,o.useState)(null),[w,k]=(0,o.useState)([]),[A,P]=(0,o.useState)([]),[S,L]=(0,o.useState)([]),[C,_]=(0,o.useState)(!0),[E,F]=(0,o.useState)(!1),[T,U]=(0,o.useState)(null);(0,o.useEffect)(()=>{(async()=>{_(!0),U(null);let l=g.env.NEXT_PUBLIC_API_URL;console.log("API URL: ".concat(l)),console.log("Full request URL: ".concat(l,"/api/structure-folders/").concat(e,"/").concat(t));try{let a=await fetch("".concat(l,"/api/structure-folders/").concat(e,"/").concat(t));if(console.log("Response status: ".concat(a.status," ").concat(a.statusText)),!a.ok){let e="Failed to load folders: ".concat(a.status," ").concat(a.statusText);try{let t=await a.text();t&&(e+=" - ".concat(t),console.error("Backend error response:",t))}catch(e){console.error("Could not parse error response:",e)}throw Error(e)}let o=await a.json();console.log("Folders data received:",o);let s=o.folder_names.map(e=>({name:e,type:"folder",file_count:0,path:"".concat(o.structure_path,"/").concat(e)}));k(s)}catch(e){console.error("Error loading well folders:",e),U(e instanceof Error?e.message:"Failed to load folders"),k([])}finally{_(!1)}})()},[]),(0,o.useEffect)(()=>{v?(async()=>{F(!0),U(null);let l=g.env.NEXT_PUBLIC_API_URL;console.log("Loading files for folder: ".concat(v)),console.log("Full request URL: ".concat(l,"/api/well-folder-files/").concat(e,"/").concat(t,"/").concat(v));try{let a=await fetch("".concat(l,"/api/well-folder-files/").concat(e,"/").concat(t,"/").concat(v));if(console.log("Files response status: ".concat(a.status," ").concat(a.statusText)),!a.ok){let e="Failed to load files: ".concat(a.status," ").concat(a.statusText);try{let t=await a.text();t&&(e+=" - ".concat(t),console.error("Backend error response:",t))}catch(e){console.error("Could not parse error response:",e)}throw Error(e)}let o=await a.json();console.log("Files data received:",o),P(o.csv_files_details)}catch(e){console.error("Error loading files:",e),U(e instanceof Error?e.message:"Failed to load files"),P([])}finally{F(!1)}})():P([])},[v]),(0,o.useEffect)(()=>{m&&(console.log("Selected file path changed: ".concat(m)),f())},[m,l,f]);let I=e=>{v===e?N(null):N(e),L([])},R=async e=>{let t,l=e.path,a=S.includes(l)?S.filter(e=>e!==l):[...S,l];if(L(a),e.name.toLowerCase().includes("spliced")?(t=e.name.replace(/\.[^/.]+$/,""),console.log("Spliced file detected: ".concat(e.name,", using wellName: ").concat(t))):t=e.name.replace(/\.[^/.]+$/,""),S.includes(l)?b.includes(t)&&y(t):b.includes(t)||y(t),!S.includes(l)&&".csv"===e.extension&&a.length>0){console.log("File selected: ".concat(e.name)),console.log("File path: ".concat(l)),console.log("Is spliced file: ".concat(e.name.toLowerCase().includes("spliced"))),e.name.toLowerCase().includes("spliced")?(console.log("Setting plot type to splicing"),h("splicing")):(console.log("Setting plot type to get-module1-plot"),h("get-module1-plot")),x(l),console.log("Selected file path set to: ".concat(l)),j({data:[],layout:{}});try{let a,o;console.log("Requesting plot for CSV file: ".concat(l)),console.log("Well name: ".concat(t,", File: ").concat(e.name)),console.log("File path for backend: ".concat(l));let s=g.env.NEXT_PUBLIC_API_URL;a=e.name.toLowerCase().includes("spliced")?"".concat(s,"/api/get-splicing-plot"):"".concat(s,"/api/get-module1-plot"),console.log("Full plot URL: ".concat(a));let n=await fetch(a,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({file_path:l})});if(console.log("Plot response status: ".concat(n.status," ").concat(n.statusText)),!n.ok){let e="Failed to get plot: ".concat(n.status," ").concat(n.statusText);try{let t=await n.text();t&&(e+=" - ".concat(t),console.error("Plot error response:",t))}catch(e){console.error("Could not parse plot error response:",e)}throw Error(e)}let c=await n.json();console.log("Plot data received from backend:",c),console.log("Plot data type: ".concat(typeof c)),console.log("Plot data length: ".concat("string"==typeof c?c.length:"not string"));try{o="string"==typeof c?JSON.parse(c):c,console.log("Parsed plot data:",o),console.log("Parsed plot data has data: ".concat(!!(null==o?void 0:o.data))),console.log("Parsed plot data has layout: ".concat(!!(null==o?void 0:o.layout))),o&&"object"==typeof o&&(o.data||o.layout)?(console.log("Using parsed plot data for setPlotFigure"),j({data:o.data||[],layout:o.layout||{}}),console.log("Plot data updated in dashboard context")):c&&c.error?(console.error("Plot request failed - backend error:",c.error),U("Plot generation failed: ".concat(c.error))):(console.error("Plot request failed - invalid Plotly figure structure"),U("Plot generation failed: Invalid plot data structure"))}catch(e){console.error("Failed to parse plot data:",e),U("Plot generation failed: Could not parse plot data")}}catch(e){console.error("Error processing plot:",e),U(e instanceof Error?e.message:"Failed to process plot data")}}},q=()=>{if(S.length===A.length)L([]),A.forEach(e=>{let t=e.name.replace(/\.[^/.]+$/,"");b.includes(t)&&y(t)});else{let e=A.map(e=>e.path);L(e),A.forEach(e=>{let t=e.name.replace(/\.[^/.]+$/,"");b.includes(t)||y(t)});let t=A.find(e=>".csv"===e.extension);t&&(console.log("Select all - First CSV file: ".concat(t.name)),console.log("Select all - Is spliced: ".concat(t.name.toLowerCase().includes("spliced"))),t.name.toLowerCase().includes("spliced")?(console.log("Select all - Setting plot type to splicing"),h("splicing")):(console.log("Select all - Setting plot type to get-module1-plot"),h("get-module1-plot")),x(t.path),j({data:[],layout:{}}),(async()=>{try{let l,a=g.env.NEXT_PUBLIC_API_URL;l=t.name.toLowerCase().includes("spliced")?"".concat(a,"/api/get-splicing-plot"):"".concat(a,"/api/get-module1-plot");let o=await fetch(l,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({file_path:e})});if(o.ok){let e=await o.json(),t="string"==typeof e?JSON.parse(e):e;t&&(t.data||t.layout)&&j({data:t.data||[],layout:t.layout||{}})}}catch(e){console.error("Error in select all plot generation:",e)}})())}};return(0,a.jsxs)("aside",{className:"w-52 bg-gray-100 flex flex-col gap-2 p-2 border-r border-gray-300 h-screen",children:[(0,a.jsxs)("div",{className:"flex items-center gap-2 px-2 py-1",children:[(0,a.jsx)(s.A,{className:"w-4 h-4 text-gray-600"}),(0,a.jsx)("div",{className:"text-xs font-bold text-gray-800",children:"Wells Browser"})]}),(0,a.jsx)("div",{className:"bg-blue-50 border border-blue-200 rounded-lg p-2",children:(0,a.jsxs)("div",{className:"text-xs text-blue-700",children:[(0,a.jsx)("div",{className:"font-semibold",children:t}),(0,a.jsxs)("div",{className:"text-blue-500",children:["Field: ",e]})]})}),T&&(0,a.jsxs)("div",{className:"bg-red-50 border border-red-200 rounded-lg p-2",children:[(0,a.jsx)("div",{className:"text-xs text-red-700 font-medium",children:"Error:"}),(0,a.jsx)("div",{className:"text-xs text-red-600",children:T})]}),(0,a.jsxs)("div",{className:"bg-white rounded-lg shadow-sm p-2",children:[(0,a.jsx)("h3",{className:"text-xs font-bold text-gray-700 mb-1",children:"Well Folders"}),(0,a.jsx)("div",{className:"space-y-1 max-h-40 overflow-y-auto",children:C?(0,a.jsxs)("div",{className:"flex items-center gap-2 p-1",children:[(0,a.jsx)(n.A,{className:"w-3 h-3 animate-spin text-gray-400"}),(0,a.jsx)("span",{className:"text-xs text-gray-500",children:"Loading..."})]}):w&&0!==w.length?w.map(e=>(0,a.jsxs)("button",{onClick:()=>I(e.name),className:"w-full flex items-center gap-2 p-1 text-xs rounded transition-colors duration-200 ".concat(v===e.name?"bg-green-100 text-green-800":"hover:bg-gray-100 text-gray-700"),children:[(0,a.jsx)(c.A,{className:"w-3 h-3 text-yellow-500"}),(0,a.jsx)("span",{className:"flex-1 text-left truncate",children:e.name}),v===e.name?(0,a.jsx)(r.A,{className:"w-3 h-3"}):(0,a.jsx)(i.A,{className:"w-3 h-3"})]},e.name)):(0,a.jsx)("div",{className:"text-xs text-gray-500 p-1",children:"No folders found"})})]}),v&&(0,a.jsxs)("div",{className:"bg-white rounded-lg shadow-sm p-2 flex-1 overflow-hidden",children:[(0,a.jsxs)("h3",{className:"text-xs font-bold text-gray-700 mb-2",children:["Files in ",v]}),A&&A.length>0&&(0,a.jsxs)("div",{className:"flex items-center gap-2 mb-2 pb-2 border-b border-gray-200",children:[(0,a.jsxs)("button",{onClick:q,className:"w-4 h-4 rounded border-2 flex items-center justify-center transition-colors duration-200 ".concat(S.length===A.length&&A.length>0?"bg-blue-500 border-blue-500 text-white":S.length>0?"bg-blue-200 border-blue-400 text-blue-700":"border-gray-300 hover:border-blue-400"),title:S.length===A.length?"Deselect All":"Select All",children:[S.length===A.length&&A.length>0&&(0,a.jsx)(d,{className:"w-3 h-3"}),S.length>0&&S.length<A.length&&(0,a.jsx)("div",{className:"w-2 h-2 bg-blue-700 rounded-sm"})]}),(0,a.jsx)("span",{className:"text-xs text-blue-600 hover:text-blue-800 cursor-pointer",onClick:q,children:S.length===A.length?"Deselect All":"Select All"})]}),(0,a.jsx)("div",{className:"space-y-1 overflow-y-auto flex-1",children:E?(0,a.jsxs)("div",{className:"flex items-center gap-2 p-1",children:[(0,a.jsx)(n.A,{className:"w-3 h-3 animate-spin text-gray-400"}),(0,a.jsx)("span",{className:"text-xs text-gray-500",children:"Loading..."})]}):A&&0!==A.length?A.map(e=>{let t=S.includes(e.path);return(0,a.jsx)("div",{className:"space-y-0.5",children:(0,a.jsxs)("div",{className:"w-full flex items-center gap-2 p-1 text-xs rounded transition-colors duration-200 ".concat(t?"bg-blue-100 text-blue-800 border border-blue-300":"hover:bg-gray-100 text-gray-700 border border-transparent"),title:e.path,children:[(0,a.jsx)("button",{onClick:()=>R(e),className:"w-4 h-4 rounded border-2 flex items-center justify-center transition-colors duration-200 ".concat(t?"bg-blue-500 border-blue-500 text-white":"border-gray-300 hover:border-blue-400"),children:t&&(0,a.jsx)(d,{className:"w-3 h-3"})}),(0,a.jsx)(u.A,{className:"w-3 h-3 flex-shrink-0 ".concat(".csv"===e.extension?"text-blue-500":"text-gray-500")}),(0,a.jsx)("span",{className:"flex-1 text-left truncate",children:e.name})]})},e.path)}):(0,a.jsx)("div",{className:"text-xs text-gray-500 p-1",children:"No files found"})}),S&&S.length>0&&(0,a.jsx)("div",{className:"mt-2 pt-2 border-t border-gray-200",children:(0,a.jsxs)("div",{className:"text-xs text-blue-600 font-medium",children:[S.length," file",1!==S.length?"s":""," selected"]})})]}),(0,a.jsxs)("div",{className:"bg-white rounded-lg shadow-sm p-2 mt-auto",children:[(0,a.jsx)("h3",{className:"text-xs font-bold text-gray-700 mb-2",children:"Display"}),(0,a.jsx)("div",{className:"flex flex-col gap-2",children:(0,a.jsxs)("div",{children:[(0,a.jsx)("label",{className:"text-xs text-gray-600 mb-1 block",children:"Plot Layout"}),(0,a.jsxs)("select",{value:l,onChange:e=>{h(e.target.value)},className:"text-xs w-full bg-white border border-gray-200 rounded p-1 focus:ring-1 focus:ring-blue-500",disabled:!m,children:[(0,a.jsx)("option",{value:"default",children:"Layout Default"}),(0,a.jsx)("option",{value:"normalization-prep",children:"Layout Normalisasi"}),(0,a.jsx)("option",{value:"smoothing-prep",children:"Layout Smoothing"}),(0,a.jsx)("option",{value:"splicing",children:"Layout Splicing"})]})]})})]})]})}var x=l(1713),m=l(2431),f=l(5695);function b(e){let{children:t}=e;return(0,a.jsx)(p.q,{children:(0,a.jsx)(y,{children:t})})}function y(e){let{children:t}=e,l=(0,f.usePathname)().split("/").pop()||null;return(0,a.jsxs)("div",{className:"flex h-[calc(100vh-80px)] w-full bg-gray-100 font-sans text-gray-800",children:[(0,a.jsx)(h,{}),(0,a.jsx)(x.A,{children:t}),(0,a.jsx)(m.A,{activeButton:l})]})}},1154:(e,t,l)=>{"use strict";l.d(t,{A:()=>a});let a=(0,l(9946).A)("loader-circle",[["path",{d:"M21 12a9 9 0 1 1-6.219-8.56",key:"13zald"}]])},1380:(e,t,l)=>{"use strict";l.d(t,{A:()=>a});let a=(0,l(9946).A)("folder",[["path",{d:"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",key:"1kt360"}]])},4213:(e,t,l)=>{"use strict";l.d(t,{A:()=>a});let a=(0,l(9946).A)("database",[["ellipse",{cx:"12",cy:"5",rx:"9",ry:"3",key:"msslwz"}],["path",{d:"M3 5V19A9 3 0 0 0 21 19V5",key:"1wlel7"}],["path",{d:"M3 12A9 3 0 0 0 21 12",key:"mv7ke4"}]])},9890:(e,t,l)=>{"use strict";l.d(t,{A:()=>a});let a=(0,l(9946).A)("file",[["path",{d:"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z",key:"1rqfz7"}],["path",{d:"M14 2v4a2 2 0 0 0 2 2h4",key:"tnqrlb"}]])}},e=>{var t=t=>e(e.s=t);e.O(0,[9,672,723,441,684,358],()=>t(789)),_N_E=e.O()}]);